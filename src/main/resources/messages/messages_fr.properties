app.title=Application Web Moderne
welcome.everybody=Bienvenue sur Application Web Moderne
navbar.health=Santé
navbar.api=API
debug.head=Tests et Débogage HTTP
debug.subhead=Outil éducatif côté client
debug.description=Cette section démontre les requêtes et réponses HTTP en utilisant JavaScript Fetch API. Toutes les interactions ci-dessous montrent la communication HTTP réelle !
webpage.title=Salutation sur la Page Web
webpage.description=Testez la page principale avec un message personnalisé
webpage.button=Tester la Page Web
api.title=Points de terminaison API
api.description=Testez l'API REST avec réponse JSON
api.button=Tester /api/hello
health.title=Vérification de Santé
health.description=Testez le point de terminaison de santé de l'application
health.button=Tester /actuator/health
devtools.button=Comment ouvrir les outils de développement
request.title=Requête HTTP
request.description=Cliquez sur un bouton de test ci-dessus pour voir les détails de la requête HTTP...
response.title=Réponse HTTP
response.description=Cliquez sur un bouton de test ci-dessus pour voir les détails de la réponse HTTP...
notes.title=Notes d’apprentissage:
notes.api.title=Fetch API: 
notes.api.description=Façon moderne en JavaScript de faire des requêtes HTTP
notes.async.title=Basé sur les promesses: 
notes.async.description=Opérations asynchrones utilisant .then() et async/await
notes.json.title=Réponse JSON: 
notes.json.description=Les points de terminaison de l’API renvoient des données structurées
notes.status.title=Codes d’état: 
notes.status.description=200 = succès, 404 = non trouvé, 500 = erreur serveur
notes.headers.title=En-têtes: 
notes.headers.description=Métadonnées envoyées avec chaque requête et réponse
footer.text=© 2025 Application Web Moderne. Construit avec Spring Boot 3.5.3 & Kotlin 2.2.10
